import java.text.NumberFormat;
import java.util.Scanner;

public class Account {
    private NumberFormat fmt = NumberFormat.getCurrencyInstance();
    private final double RATE = 0.035; // Interest rate of 3.5%
    private long acctNumber;
    private double balance;
    private String name;

    // Constructor to set up the account
    public Account(String owner, long account, double initial) {
        name = owner;
        acctNumber = account;
        balance = initial;
    }

    // Deposit funds into the account
    public double deposit(double amount) {
        if (amount <= 0) {
            System.out.println("Error: Deposit amount is invalid.");
            System.out.println(acctNumber + " " + fmt.format(amount));
        } else {
            balance = balance + amount;
        }
        return balance;
    }

    // Withdraw funds from the account
    public double withdraw(double amount, double fee) {
        amount += fee;
        if (amount <=0) {
            System.out.println("Error: Withdraw amount is invalid.");
            System.out.println("Account: " + acctNumber);
            System.out.println("Requested: " + fmt.format(amount));
        } else if (amount > balance) {
            System.out.println("Error: Insufficient funds.");
            System.out.println("Account: " + acctNumber);
            System.out.println("Requested: " + fmt.format(amount));
            System.out.println("Available: " + fmt.format(balance));
        } else {
            balance -= amount;
        }
        return balance;
    }

    // Transfer funds from this account to another account
    public double transfer(double amount, Account recipient) {
        // Validate the transaction
        if (amount < 0) {
            System.out.println("Error: Transfer amount is invalid.");
            return balance;
        } else if (amount > balance) {
            System.out.println("Error: Insufficient funds for transfer.");
            return balance;
        }

        // Perform the transfer
        balance -= amount;
        recipient.deposit(amount);
        System.out.println("Transfer successful!");
        return balance;
    }

    // View account details
    public void viewAccount() {
        System.out.println("\nAccount Information:");
        System.out.println("Account Holder: " + name);
        System.out.println("Account Number: " + acctNumber);
        System.out.println("Current Balance: " + fmt.format(balance));
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter your name: ");
        String owner = scanner.nextLine();

        System.out.print("Enter your account number: ");
        long accountNumber = scanner.nextLong();

        System.out.print("Enter initial balance: ");
        double initialBalance = scanner.nextDouble();

        Account userAccount = new Account(owner, accountNumber, initialBalance);

        System.out.println("Welcome, " + userAccount.name + "! Your account balance is " + userAccount.fmt.format(userAccount.balance));

        // Interactive menu
        while (true) {
            System.out.println("\nChoose an action:");
            System.out.println("1. Deposit");
            System.out.println("2. Withdraw");
            System.out.println("3. Transfer");
            System.out.println("4. View Account");
            System.out.println("5. Exit");

            int choice = scanner.nextInt();
            double amount;

            switch (choice) {
                case 1:
                    System.out.print("Enter deposit amount: ");
                    amount = scanner.nextDouble();
                    userAccount.deposit(amount);
                    break;
                case 2:
                    System.out.print("Enter withdrawal amount: ");
                    amount = scanner.nextDouble();
                    userAccount.withdraw(amount, 0); // No fee for this example
                    break;
                case 3:
                    System.out.print("Enter transfer amount: ");
                    amount = scanner.nextDouble();
                    System.out.print("Enter recipient's account number: ");
                    long recipientAccountNumber = scanner.nextLong();
                    Account recipient = new Account("Recipient", recipientAccountNumber, 0);
                    userAccount.transfer(amount, recipient);
                    break;
                case 4:
                    userAccount.viewAccount();
                    break;
                case 5:
                    System.out.println("Thank you for using our banking system!");
                    return;
                default:
                    System.out.println("Invalid choice. Please select a valid option.");
            }
        }
    }
}
